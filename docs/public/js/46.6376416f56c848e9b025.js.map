{"version":3,"file":"public/js/46.6376416f56c848e9b025.js","sources":["webpack:///src/views/interaction/index.vue"],"sourcesContent":["<!-- 动态交互图 -->\r\n\r\n<template>\r\n  <div class=\"demo\">\r\n    <div class=\"box\">\r\n      <h3>动态更新的柱状图</h3>\r\n      <div id=\"container\"></div>\r\n    </div>\r\n    <div class=\"box\">\r\n      <h3>动态更新的面积图</h3>\r\n      <div id=\"containerGs\"></div>\r\n    </div>\r\n    <div class=\"box\">\r\n      <h3>动态更新的仪表盘</h3>\r\n      <div id=\"containerGz\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Column, Area, Gauge } from '@antv/g2plot'\r\n\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      data: [\r\n        {\r\n          timePeriod: '2006 Q3',\r\n          value: 1\r\n        },\r\n        {\r\n          timePeriod: '2006 Q4',\r\n          value: 1.08\r\n        },\r\n        {\r\n          timePeriod: '2007 Q1',\r\n          value: 1.17\r\n        },\r\n        {\r\n          timePeriod: '2007 Q2',\r\n          value: 1.26\r\n        },\r\n        {\r\n          timePeriod: '2007 Q3',\r\n          value: 1.34\r\n        },\r\n        {\r\n          timePeriod: '2007 Q4',\r\n          value: 1.41\r\n        },\r\n        {\r\n          timePeriod: '2008 Q1',\r\n          value: 1.52\r\n        },\r\n        {\r\n          timePeriod: '2008 Q2',\r\n          value: 1.67\r\n        },\r\n        {\r\n          timePeriod: '2008 Q3',\r\n          value: 1.84\r\n        },\r\n        {\r\n          timePeriod: '2008 Q4',\r\n          value: 2.07\r\n        },\r\n        {\r\n          timePeriod: '2009 Q1',\r\n          value: 2.39\r\n        },\r\n        {\r\n          timePeriod: '2009 Q2',\r\n          value: 2.71\r\n        },\r\n        {\r\n          timePeriod: '2009 Q3',\r\n          value: 3.03\r\n        },\r\n        {\r\n          timePeriod: '2009 Q4',\r\n          value: 3.33\r\n        },\r\n        {\r\n          timePeriod: '2010 Q1',\r\n          value: 3.5\r\n        },\r\n        {\r\n          timePeriod: '2010 Q2',\r\n          value: 3.37\r\n        },\r\n        {\r\n          timePeriod: '2010 Q3',\r\n          value: 3.15\r\n        },\r\n        {\r\n          timePeriod: '2010 Q4',\r\n          value: 3.01\r\n        },\r\n        {\r\n          timePeriod: '2011 Q1',\r\n          value: 2.8\r\n        },\r\n        {\r\n          timePeriod: '2011 Q2',\r\n          value: 2.8\r\n        },\r\n        {\r\n          timePeriod: '2011 Q3',\r\n          value: 2.84\r\n        },\r\n        {\r\n          timePeriod: '2011 Q4',\r\n          value: 2.75\r\n        },\r\n        {\r\n          timePeriod: '2012 Q1',\r\n          value: 2.64\r\n        },\r\n        {\r\n          timePeriod: '2012 Q2',\r\n          value: 2.55\r\n        },\r\n        {\r\n          timePeriod: '2012 Q3',\r\n          value: 2.46\r\n        },\r\n        {\r\n          timePeriod: '2012 Q4',\r\n          value: 2.45\r\n        },\r\n        {\r\n          timePeriod: '2013 Q1',\r\n          value: 2.57\r\n        },\r\n        {\r\n          timePeriod: '2013 Q2',\r\n          value: 2.68\r\n        },\r\n        {\r\n          timePeriod: '2013 Q3',\r\n          value: 2.8\r\n        },\r\n        {\r\n          timePeriod: '2013 Q4',\r\n          value: 2.89\r\n        },\r\n        {\r\n          timePeriod: '2014 Q1',\r\n          value: 2.85\r\n        },\r\n        {\r\n          timePeriod: '2014 Q2',\r\n          value: 2.73\r\n        },\r\n        {\r\n          timePeriod: '2014 Q3',\r\n          value: 2.54\r\n        },\r\n        {\r\n          timePeriod: '2014 Q4',\r\n          value: 2.32\r\n        },\r\n        {\r\n          timePeriod: '2015 Q1',\r\n          value: 2.25\r\n        },\r\n        {\r\n          timePeriod: '2015 Q2',\r\n          value: 2.33\r\n        },\r\n        {\r\n          timePeriod: '2015 Q3',\r\n          value: 2.53\r\n        },\r\n        {\r\n          timePeriod: '2015 Q4',\r\n          value: 2.74\r\n        },\r\n        {\r\n          timePeriod: '2016 Q1',\r\n          value: 2.76\r\n        },\r\n        {\r\n          timePeriod: '2016 Q2',\r\n          value: 2.61\r\n        },\r\n        {\r\n          timePeriod: '2016 Q3',\r\n          value: 2.35\r\n        },\r\n        {\r\n          timePeriod: '2016 Q4',\r\n          value: 2.11\r\n        },\r\n        {\r\n          timePeriod: '2017 Q1',\r\n          value: 2.08\r\n        },\r\n        {\r\n          timePeriod: '2017 Q2',\r\n          value: 2.2\r\n        },\r\n        {\r\n          timePeriod: '2017 Q3',\r\n          value: 2.38\r\n        },\r\n        {\r\n          timePeriod: '2017 Q4',\r\n          value: 2.59\r\n        },\r\n        {\r\n          timePeriod: '2018 Q1',\r\n          value: 2.63\r\n        },\r\n        {\r\n          timePeriod: '2018 Q2',\r\n          value: 2.67\r\n        },\r\n        {\r\n          timePeriod: '2018 Q3',\r\n          value: 2.64\r\n        },\r\n        {\r\n          timePeriod: '2018 Q4',\r\n          value: 2.5\r\n        },\r\n        {\r\n          timePeriod: '2019 Q1',\r\n          value: 2.31\r\n        },\r\n        {\r\n          timePeriod: '2019 Q2',\r\n          value: 2.04\r\n        },\r\n        {\r\n          timePeriod: '2019 Q3',\r\n          value: 1.83\r\n        },\r\n        {\r\n          timePeriod: '2019 Q4',\r\n          value: 1.71\r\n        },\r\n        {\r\n          timePeriod: '2020 Q1',\r\n          value: 1.65\r\n        },\r\n        {\r\n          timePeriod: '2020 Q2',\r\n          value: 1.59\r\n        },\r\n        {\r\n          timePeriod: '2020 Q3',\r\n          value: 1.58\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  mounted() {\r\n    // 在 mounted 中构建，防止created 中无法获取标签元素\r\n    const data = [\r\n      { type: '1-3秒', value: 0.16 },\r\n      { type: '4-10秒', value: 0.125 },\r\n      { type: '11-30秒', value: 0.24 },\r\n      { type: '31-60秒', value: 0.19 },\r\n      { type: '1-3分', value: 0.22 },\r\n      { type: '3-10分', value: 0.05 },\r\n      { type: '10-30分', value: 0.01 },\r\n      { type: '30+分', value: 0.015 }\r\n    ]\r\n\r\n    const paletteSemanticRed = '#F4664A'\r\n    const brandColor = '#5B8FF9'\r\n    const columnPlot = new Column('container', {\r\n      data,\r\n      xField: 'type',\r\n      yField: 'value',\r\n      seriesField: 'value',\r\n      color: ({ value }) => {\r\n        if (value < 0.05) {\r\n          return paletteSemanticRed\r\n        }\r\n        return brandColor\r\n      },\r\n      legend: false\r\n    })\r\n\r\n    columnPlot.render()\r\n    setInterval(() => {\r\n      columnPlot.changeData(data.map(d => ({ ...d, value: d.value * Math.random() })))\r\n    }, 1200)\r\n\r\n    this.containerGs()\r\n    this.containerGz()\r\n  },\r\n  methods: {\r\n    containerGs() {\r\n      const originalData = this.data\r\n      let cnt = 2\r\n      const area = new Area('containerGs', {\r\n        data: originalData.slice(0, cnt),\r\n        xField: 'timePeriod',\r\n        yField: 'value',\r\n        xAxis: {\r\n          range: [0, 1]\r\n        }\r\n      })\r\n      area.render()\r\n\r\n      const interval = setInterval(() => {\r\n        if (cnt === originalData.length) {\r\n          clearInterval(interval)\r\n        } else {\r\n          cnt += 1\r\n          area.changeData(originalData.slice(0, cnt))\r\n        }\r\n      }, 400)\r\n    },\r\n    containerGz() {\r\n      const color = ['#F4664A', '#FAAD14', '#30BF78']\r\n      const getColor = percent => {\r\n        return percent < 0.4 ? color[0] : percent < 0.6 ? color[1] : color[2]\r\n      }\r\n      const gauge = new Gauge('containerGz', {\r\n        percent: 0.2,\r\n        range: {\r\n          color: getColor(0.2)\r\n        },\r\n        indicator: {\r\n          pointer: {\r\n            style: {\r\n              stroke: '#D0D0D0'\r\n            }\r\n          },\r\n          pin: {\r\n            style: {\r\n              stroke: '#D0D0D0'\r\n            }\r\n          }\r\n        },\r\n        axis: {\r\n          label: {\r\n            formatter(v) {\r\n              return Number(v) * 100\r\n            }\r\n          },\r\n          subTickLine: {\r\n            count: 3\r\n          }\r\n        },\r\n        statistic: {\r\n          content: {\r\n            formatter: ({ percent }) => `Rate: ${(percent * 100).toFixed(0)}%`\r\n          },\r\n          style: {\r\n            fontSize: 60\r\n          }\r\n        },\r\n        animation: false\r\n      })\r\n\r\n      gauge.render()\r\n\r\n      let data = 0.2\r\n      const interval = setInterval(() => {\r\n        if (data >= 0.85) {\r\n          clearInterval(interval)\r\n        } else {\r\n          data += 0.001\r\n          gauge.changeData(data)\r\n          gauge.update({ range: { color: getColor(data) } })\r\n        }\r\n      }, 100)\r\n    }\r\n  },\r\n  created() {\r\n    // var wrapperElement = '<div style=\"position:relative;\"></div>'\r\n    // console.log(document.getElementById('container'))\r\n    // document.getElementById('container').appendChild(wrapperElement)\r\n    // setTimeout(() => {\r\n    // }, 2000)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.demo {\r\n  display: flex;\r\n  flex-flow: wrap;\r\n\r\n  .box {\r\n    box-shadow: 0px 2px 25px 0px rgba(133, 153, 181, 0.2);\r\n    border-radius: 10px;\r\n    display: inline-block;\r\n    padding: 0 20px 20px;\r\n    margin: 20px;\r\n\r\n    h3 {\r\n      line-height: 50px;\r\n      height: 50px;\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  #container {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n\r\n  #containerGs {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n\r\n  #containerGz {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n\r\n  #containerpt {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n\r\n  #containerGet {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n\r\n  #containerTexture {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/interaction/index.vue"],"mappings":"AAsBA","sourceRoot":""}