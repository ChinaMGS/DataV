{"version":3,"file":"public/js/24.e98d37ccfbad66abd1d2.js","sources":["webpack:///src/views/biaxialGraph/stackedColumnChart.vue"],"sourcesContent":["<!-- 双折线图\r\n -->\r\n\r\n<template>\r\n  <div class=\"demo\">\r\n    <div class=\"box\">\r\n      <h3>堆叠柱线图表</h3>\r\n      <div id=\"container\"></div>\r\n    </div>\r\n    <div class=\"box\">\r\n      <h3>堆叠柱线图表-自定义样式</h3>\r\n      <div id=\"containerGs\"></div>\r\n    </div>\r\n    <div class=\"box\">\r\n      <h3>百分比堆叠柱线图表</h3>\r\n      <div id=\"containerGz\"></div>\r\n    </div>\r\n    <div class=\"box\">\r\n      <h3>堆叠柱线图表-显示多折线</h3>\r\n      <div id=\"containerpt\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { DualAxes, G2 } from '@antv/g2plot'\r\n\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      data: [\r\n        { time: '2019-03', value: 350, type: 'uv' },\r\n        { time: '2019-04', value: 900, type: 'uv' },\r\n        { time: '2019-05', value: 300, type: 'uv' },\r\n        { time: '2019-06', value: 450, type: 'uv' },\r\n        { time: '2019-07', value: 470, type: 'uv' },\r\n        { time: '2019-03', value: 220, type: 'bill' },\r\n        { time: '2019-04', value: 300, type: 'bill' },\r\n        { time: '2019-05', value: 250, type: 'bill' },\r\n        { time: '2019-06', value: 220, type: 'bill' },\r\n        { time: '2019-07', value: 362, type: 'bill' }\r\n      ],\r\n      transformData: [\r\n        { time: '2019-03', count: 800 },\r\n        { time: '2019-04', count: 600 },\r\n        { time: '2019-05', count: 400 },\r\n        { time: '2019-06', count: 380 },\r\n        { time: '2019-07', count: 220 }\r\n      ],\r\n      uvData: [\r\n        { time: '2019-03', value: 35 },\r\n        { time: '2019-04', value: 90 },\r\n        { time: '2019-05', value: 30 },\r\n        { time: '2019-06', value: 45 },\r\n        { time: '2019-07', value: 47 }\r\n      ],\r\n\r\n      transformDat: [\r\n        { time: '2019-03', count: 800, name: 'a' },\r\n        { time: '2019-04', count: 600, name: 'a' },\r\n        { time: '2019-05', count: 400, name: 'a' },\r\n        { time: '2019-06', count: 380, name: 'a' },\r\n        { time: '2019-07', count: 220, name: 'a' },\r\n        { time: '2019-03', count: 750, name: 'b' },\r\n        { time: '2019-04', count: 650, name: 'b' },\r\n        { time: '2019-05', count: 450, name: 'b' },\r\n        { time: '2019-06', count: 400, name: 'b' },\r\n        { time: '2019-07', count: 320, name: 'b' },\r\n        { time: '2019-03', count: 900, name: 'c' },\r\n        { time: '2019-04', count: 600, name: 'c' },\r\n        { time: '2019-05', count: 450, name: 'c' },\r\n        { time: '2019-06', count: 300, name: 'c' },\r\n        { time: '2019-07', count: 200, name: 'c' }\r\n      ]\r\n    }\r\n  },\r\n  mounted() {\r\n    // 在 mounted 中构建，防止created 中无法获取标签元素\r\n    const transformData = this.transformData\r\n    const data = this.data\r\n    const dualAxes = new DualAxes('container', {\r\n      data: [data, transformData],\r\n      xField: 'time',\r\n      yField: ['value', 'count'],\r\n      geometryOptions: [\r\n        {\r\n          geometry: 'column',\r\n          isStack: true,\r\n          seriesField: 'type'\r\n        },\r\n        {\r\n          geometry: 'line'\r\n        }\r\n      ]\r\n    })\r\n\r\n    dualAxes.render()\r\n\r\n    this.containerGs()\r\n    this.containerGz()\r\n    this.containerpt()\r\n  },\r\n  methods: {\r\n    containerGs() {\r\n      const { registerTheme } = G2\r\n\r\n      registerTheme('custom-theme', {\r\n        colors10: ['#FACDAA', '#F4A49E', '#EE7B91', '#E85285', '#BE408C', '#BE408C'],\r\n        /** 20色板 */\r\n        colors20: ['#FACDAA', '#F4A49E', '#EE7B91', '#E85285', '#BE408C', '#BE408C', '#942D93']\r\n      })\r\n\r\n      const uvBillData = [\r\n        { time: '2019-03', value: 350, type: 'uv' },\r\n        { time: '2019-04', value: 900, type: 'uv' },\r\n        { time: '2019-05', value: 300, type: 'uv' },\r\n        { time: '2019-06', value: 450, type: 'uv' },\r\n        { time: '2019-07', value: 470, type: 'uv' },\r\n        { time: '2019-03', value: 220, type: 'bill' },\r\n        { time: '2019-04', value: 300, type: 'bill' },\r\n        { time: '2019-05', value: 250, type: 'bill' },\r\n        { time: '2019-06', value: 220, type: 'bill' },\r\n        { time: '2019-07', value: 362, type: 'bill' }\r\n      ]\r\n\r\n      const transformData = [\r\n        { time: '2019-03', count: 800 },\r\n        { time: '2019-04', count: 600 },\r\n        { time: '2019-05', count: 400 },\r\n        { time: '2019-06', count: 380 },\r\n        { time: '2019-07', count: 220 }\r\n      ]\r\n\r\n      const dualAxes = new DualAxes('containerGs', {\r\n        data: [uvBillData, transformData],\r\n        xField: 'time',\r\n        yField: ['value', 'count'],\r\n        geometryOptions: [\r\n          {\r\n            geometry: 'column',\r\n            isStack: true,\r\n            seriesField: 'type',\r\n            columnWidthRatio: 0.4,\r\n            label: {}\r\n          },\r\n          {\r\n            geometry: 'line'\r\n          }\r\n        ],\r\n        legend: {\r\n          marker: {\r\n            symbol: 'circle',\r\n            style: {\r\n              lineWidth: 2,\r\n              r: 6,\r\n              stroke: '#5AD8A6',\r\n              fill: '#fff'\r\n            }\r\n          },\r\n          layout: 'vertical',\r\n          position: 'right',\r\n          itemName: {\r\n            formatter: val => `@${val}`,\r\n            style: {\r\n              fill: '#333'\r\n            }\r\n          }\r\n        },\r\n        interactions: [\r\n          {\r\n            type: 'element-highlight'\r\n          },\r\n          {\r\n            type: 'active-region'\r\n          }\r\n        ],\r\n        animation: false,\r\n        theme: 'custom-theme'\r\n      })\r\n\r\n      dualAxes.render()\r\n    },\r\n    containerGz() {\r\n      const uvBillData = [\r\n        { time: '2019-03', value: 350, type: 'uv' },\r\n        { time: '2019-04', value: 900, type: 'uv' },\r\n        { time: '2019-05', value: 300, type: 'uv' },\r\n        { time: '2019-06', value: 450, type: 'uv' },\r\n        { time: '2019-07', value: 470, type: 'uv' },\r\n        { time: '2019-03', value: 220, type: 'bill' },\r\n        { time: '2019-04', value: 300, type: 'bill' },\r\n        { time: '2019-05', value: 250, type: 'bill' },\r\n        { time: '2019-06', value: 220, type: 'bill' },\r\n        { time: '2019-07', value: 362, type: 'bill' }\r\n      ]\r\n\r\n      const transformData = [\r\n        { time: '2019-03', count: 800 },\r\n        { time: '2019-04', count: 600 },\r\n        { time: '2019-05', count: 400 },\r\n        { time: '2019-06', count: 380 },\r\n        { time: '2019-07', count: 220 }\r\n      ]\r\n\r\n      const dualAxes = new DualAxes('containerGz', {\r\n        data: [uvBillData, transformData],\r\n        xField: 'time',\r\n        yField: ['value', 'count'],\r\n        geometryOptions: [\r\n          {\r\n            geometry: 'column',\r\n            isStack: true,\r\n            isPercent: true,\r\n            seriesField: 'type'\r\n          },\r\n          {\r\n            geometry: 'line'\r\n          }\r\n        ]\r\n      })\r\n\r\n      dualAxes.render()\r\n    },\r\n    containerpt() {\r\n      const uvBillData = [\r\n        { time: '2019-03', value: 350, type: 'uv' },\r\n        { time: '2019-04', value: 900, type: 'uv' },\r\n        { time: '2019-05', value: 300, type: 'uv' },\r\n        { time: '2019-06', value: 450, type: 'uv' },\r\n        { time: '2019-07', value: 470, type: 'uv' },\r\n        { time: '2019-03', value: 220, type: 'bill' },\r\n        { time: '2019-04', value: 300, type: 'bill' },\r\n        { time: '2019-05', value: 250, type: 'bill' },\r\n        { time: '2019-06', value: 220, type: 'bill' },\r\n        { time: '2019-07', value: 362, type: 'bill' }\r\n      ]\r\n\r\n      const transformData = [\r\n        { time: '2019-03', count: 800, name: 'a' },\r\n        { time: '2019-04', count: 600, name: 'a' },\r\n        { time: '2019-05', count: 400, name: 'a' },\r\n        { time: '2019-06', count: 380, name: 'a' },\r\n        { time: '2019-07', count: 220, name: 'a' },\r\n        { time: '2019-03', count: 750, name: 'b' },\r\n        { time: '2019-04', count: 650, name: 'b' },\r\n        { time: '2019-05', count: 450, name: 'b' },\r\n        { time: '2019-06', count: 400, name: 'b' },\r\n        { time: '2019-07', count: 320, name: 'b' },\r\n        { time: '2019-03', count: 900, name: 'c' },\r\n        { time: '2019-04', count: 600, name: 'c' },\r\n        { time: '2019-05', count: 450, name: 'c' },\r\n        { time: '2019-06', count: 300, name: 'c' },\r\n        { time: '2019-07', count: 200, name: 'c' }\r\n      ]\r\n\r\n      const dualAxes = new DualAxes('containerpt', {\r\n        data: [uvBillData, transformData],\r\n        xField: 'time',\r\n        yField: ['value', 'count'],\r\n        geometryOptions: [\r\n          {\r\n            geometry: 'column',\r\n            isStack: true,\r\n            seriesField: 'type',\r\n            columnWidthRatio: 0.4\r\n          },\r\n          {\r\n            geometry: 'line',\r\n            seriesField: 'name',\r\n            lineStyle: ({ name }) => {\r\n              if (name === 'a') {\r\n                return {\r\n                  lineDash: [1, 4],\r\n                  opacity: 1\r\n                }\r\n              }\r\n              return {\r\n                opacity: 0.5\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      })\r\n\r\n      dualAxes.render()\r\n    }\r\n  },\r\n  created() {\r\n    // var wrapperElement = '<div style=\"position:relative;\"></div>'\r\n    // console.log(document.getElementById('container'))\r\n    // document.getElementById('container').appendChild(wrapperElement)\r\n    // setTimeout(() => {\r\n    // }, 2000)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.demo {\r\n  display: flex;\r\n  flex-flow: wrap;\r\n\r\n  .box {\r\n    box-shadow: 0px 2px 25px 0px rgba(133, 153, 181, 0.2);\r\n    border-radius: 10px;\r\n    display: inline-block;\r\n    padding: 0 20px 20px;\r\n    margin: 20px;\r\n\r\n    h3 {\r\n      line-height: 50px;\r\n      height: 50px;\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  #container {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n\r\n  #containerGs {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n\r\n  #containerGz {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n\r\n  #containerpt {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n\r\n  #containerGet {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n\r\n  #containerTexture {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/biaxialGraph/stackedColumnChart.vue"],"mappings":"AA2BA","sourceRoot":""}