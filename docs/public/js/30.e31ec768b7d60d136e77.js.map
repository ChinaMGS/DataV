{"version":3,"file":"public/js/30.e31ec768b7d60d136e77.js","sources":["webpack:///src/views/histogram/index.vue"],"sourcesContent":["<!-- 柱状图 -->\r\n\r\n<template>\r\n  <div class=\"demo\">\r\n    <div class=\"box\">\r\n      <h3>基础柱状图</h3>\r\n      <div id=\"container\"></div>\r\n    </div>\r\n    <div class=\"box\">\r\n      <h3>自定义柱状图颜色</h3>\r\n      <div id=\"containerGs\"></div>\r\n    </div>\r\n    <div class=\"box\">\r\n      <h3>带转化率柱状图</h3>\r\n      <div id=\"containerGz\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Column } from '@antv/g2plot'\r\n\r\nexport default {\r\n  components: {},\r\n  data () {\r\n    return {\r\n      data: [\r\n        {\r\n          type: '家具家电',\r\n          sales: 38\r\n        },\r\n        {\r\n          type: '粮油副食',\r\n          sales: 52\r\n        },\r\n        {\r\n          type: '生鲜水果',\r\n          sales: 61\r\n        },\r\n        {\r\n          type: '美容洗护',\r\n          sales: 145\r\n        },\r\n        {\r\n          type: '母婴用品',\r\n          sales: 48\r\n        },\r\n        {\r\n          type: '进口食品',\r\n          sales: 38\r\n        },\r\n        {\r\n          type: '食品饮料',\r\n          sales: 38\r\n        },\r\n        {\r\n          type: '家庭清洁',\r\n          sales: 38\r\n        }\r\n      ],\r\n      datalist: [\r\n        { type: '1-3秒', value: 0.16 },\r\n        { type: '4-10秒', value: 0.125 },\r\n        { type: '11-30秒', value: 0.24 },\r\n        { type: '31-60秒', value: 0.19 },\r\n        { type: '1-3分', value: 0.22 },\r\n        { type: '3-10分', value: 0.05 },\r\n        { type: '10-30分', value: 0.01 },\r\n        { type: '30+分', value: 0.015 }\r\n      ],\r\n      dataPrice: [\r\n        { action: '浏览网站', pv: 50000 },\r\n        { action: '放入购物车', pv: 35000 },\r\n        { action: '生成订单', pv: 25000 },\r\n        { action: '支付订单', pv: 15000 },\r\n        { action: '完成交易', pv: 8500 }\r\n      ]\r\n    }\r\n  },\r\n  mounted () {\r\n    // 在 mounted 中构建，防止created 中无法获取标签元素\r\n    const data = this.data\r\n    const columnPlot = new Column('container', {\r\n      data,\r\n      xField: 'type',\r\n      yField: 'sales',\r\n      label: {\r\n        // 可手动配置 label 数据标签位置\r\n        position: 'middle', // 'top', 'bottom', 'middle',\r\n        // 配置样式\r\n        style: {\r\n          fill: '#FFFFFF',\r\n          opacity: 0.6\r\n        }\r\n      },\r\n      xAxis: {\r\n        label: {\r\n          autoHide: true,\r\n          autoRotate: false\r\n        }\r\n      },\r\n      meta: {\r\n        type: {\r\n          alias: '类别'\r\n        },\r\n        sales: {\r\n          alias: '销售额'\r\n        }\r\n      }\r\n    })\r\n\r\n    columnPlot.render()\r\n\r\n    this.containerGs()\r\n    this.containerGz()\r\n  },\r\n  methods: {\r\n    containerGs () {\r\n      const paletteSemanticRed = '#F4664A'\r\n      const brandColor = '#5B8FF9'\r\n      const data = this.datalist\r\n      const columnPlot = new Column('containerGs', {\r\n        data,\r\n        xField: 'type',\r\n        yField: 'value',\r\n        seriesField: '',\r\n        color: ({ type }) => {\r\n          if (type === '10-30分' || type === '30+分') {\r\n            return paletteSemanticRed\r\n          }\r\n          return brandColor\r\n        },\r\n        label: {\r\n          content: (originData) => {\r\n            const val = parseFloat(originData.value)\r\n            if (val < 0.05) {\r\n              return (val * 100).toFixed(1) + '%'\r\n            }\r\n          },\r\n          offset: 10\r\n        },\r\n        legend: false,\r\n        xAxis: {\r\n          label: {\r\n            autoHide: true,\r\n            autoRotate: false\r\n          }\r\n        }\r\n      })\r\n\r\n      columnPlot.render()\r\n    },\r\n    containerGz () {\r\n      const data = this.dataPrice\r\n      const columnPlot = new Column('containerGz', {\r\n        data,\r\n        xField: 'action',\r\n        yField: 'pv',\r\n        conversionTag: {},\r\n        xAxis: {\r\n          label: {\r\n            autoHide: true,\r\n            autoRotate: false\r\n          }\r\n        }\r\n      })\r\n\r\n      columnPlot.render()\r\n    }\r\n  },\r\n  created () {\r\n    // var wrapperElement = '<div style=\"position:relative;\"></div>'\r\n    // console.log(document.getElementById('container'))\r\n    // document.getElementById('container').appendChild(wrapperElement)\r\n    // setTimeout(() => {\r\n    // }, 2000)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.demo{\r\n  display flex\r\n  flex-flow wrap\r\n  .box{\r\n    box-shadow: 0px 2px 25px 0px rgba(133, 153, 181, 0.2);\r\n    border-radius: 10px;\r\n    display inline-block\r\n    padding 0 20px 20px\r\n    margin 20px\r\n    h3{\r\n      line-height 50px\r\n      height 50px\r\n      text-align center\r\n    }\r\n  }\r\n  #container{\r\n    display block\r\n    width 500px\r\n    height 300px\r\n  }\r\n  #containerGs{\r\n    display block\r\n    width 500px\r\n    height 300px\r\n  }\r\n  #containerGz{\r\n    display block\r\n    width 500px\r\n    height 300px\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/histogram/index.vue"],"mappings":"AAsBA","sourceRoot":""}