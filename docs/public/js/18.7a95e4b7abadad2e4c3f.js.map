{"version":3,"file":"public/js/18.7a95e4b7abadad2e4c3f.js","sources":["webpack:///src/views/dashboard/index.vue"],"sourcesContent":["<!-- 仪表盘 -->\r\n\r\n<template>\r\n  <div class=\"demo\">\r\n    <div class=\"box\">\r\n      <h3>仪表盘</h3>\r\n      <div id=\"container\"></div>\r\n    </div>\r\n    <div class=\"box\">\r\n      <h3>仪表盘(单色渐变)</h3>\r\n      <div id=\"containerGs\"></div>\r\n    </div>\r\n    <div class=\"box\">\r\n      <h3>仪表盘(多色)</h3>\r\n      <div id=\"containerGz\"></div>\r\n    </div>\r\n    <div class=\"box\">\r\n      <h3>仪表盘(渐变色)</h3>\r\n      <div id=\"containerpt\"></div>\r\n    </div>\r\n    <div class=\"box\">\r\n      <h3>米轨仪表盘</h3>\r\n      <div id=\"containerGet\"></div>\r\n    </div>\r\n    <div class=\"box\">\r\n      <h3>米轨仪表盘(自定义步数和大小)</h3>\r\n      <div id=\"containerTexture\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Gauge } from '@antv/g2plot'\r\n\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      data: []\r\n    }\r\n  },\r\n  mounted() {\r\n    // 在 mounted 中构建，防止created 中无法获取标签元素\r\n    const gauge = new Gauge('container', {\r\n      percent: 0.75,\r\n      range: {\r\n        color: '#30BF78'\r\n      },\r\n      indicator: {\r\n        pointer: {\r\n          style: {\r\n            stroke: '#D0D0D0'\r\n          }\r\n        },\r\n        pin: {\r\n          style: {\r\n            stroke: '#D0D0D0'\r\n          }\r\n        }\r\n      },\r\n      axis: {\r\n        label: {\r\n          formatter(v) {\r\n            return Number(v) * 100\r\n          }\r\n        },\r\n        subTickLine: {\r\n          count: 3\r\n        }\r\n      },\r\n      statistic: {\r\n        content: {\r\n          formatter: ({ percent }) => `Rate: ${(percent * 100).toFixed(0)}%`\r\n        },\r\n        style: {\r\n          fontSize: 60\r\n        }\r\n      }\r\n    })\r\n\r\n    gauge.render()\r\n\r\n    this.containerGs()\r\n    this.containerGz()\r\n    this.containerpt()\r\n    this.containerGet()\r\n    this.containerTexture()\r\n  },\r\n  methods: {\r\n    containerGs() {\r\n      const gauge = new Gauge('containerGs', {\r\n        percent: 0.75,\r\n        range: {\r\n          color: 'l(0) 0:#B8E1FF 1:#3D76DD'\r\n        },\r\n        startAngle: Math.PI,\r\n        endAngle: 2 * Math.PI,\r\n        indicator: null,\r\n        statistic: {\r\n          title: {\r\n            offsetY: -36,\r\n            style: {\r\n              fontSize: '36px',\r\n              color: '#4B535E'\r\n            },\r\n            formatter: () => '70%'\r\n          },\r\n          content: {\r\n            style: {\r\n              fontSize: '24px',\r\n              lineHeight: '44px',\r\n              color: '#4B535E'\r\n            },\r\n            formatter: () => '加载进度'\r\n          }\r\n        }\r\n      })\r\n\r\n      gauge.render()\r\n    },\r\n    containerGz() {\r\n      const gauge = new Gauge('containerGz', {\r\n        percent: 0.75,\r\n        range: {\r\n          ticks: [0, 1 / 3, 2 / 3, 1],\r\n          color: ['#F4664A', '#FAAD14', '#30BF78']\r\n        },\r\n        indicator: {\r\n          pointer: {\r\n            style: {\r\n              stroke: '#D0D0D0'\r\n            }\r\n          },\r\n          pin: {\r\n            style: {\r\n              stroke: '#D0D0D0'\r\n            }\r\n          }\r\n        },\r\n        statistic: {\r\n          content: {\r\n            style: {\r\n              fontSize: '36px',\r\n              lineHeight: '36px'\r\n            }\r\n          }\r\n        }\r\n      })\r\n\r\n      gauge.render()\r\n    },\r\n    containerpt() {\r\n      const ticks = [0, 1 / 3, 2 / 3, 1]\r\n      const color = ['#F4664A', '#FAAD14', '#30BF78']\r\n\r\n      const gauge = new Gauge('containerpt', {\r\n        percent: 0,\r\n        range: {\r\n          ticks: [0, 1],\r\n          color: ['l(0) 0:#F4664A 0.5:#FAAD14 1:#30BF78']\r\n        },\r\n        indicator: {\r\n          pointer: {\r\n            style: {\r\n              stroke: '#D0D0D0'\r\n            }\r\n          },\r\n          pin: {\r\n            style: {\r\n              stroke: '#D0D0D0'\r\n            }\r\n          }\r\n        },\r\n        statistic: {\r\n          title: {\r\n            formatter: ({ percent }) => {\r\n              if (percent < ticks[1]) {\r\n                return '差'\r\n              }\r\n              if (percent < ticks[2]) {\r\n                return '中'\r\n              }\r\n              return '优'\r\n            },\r\n            style: ({ percent }) => {\r\n              return {\r\n                fontSize: '36px',\r\n                lineHeight: 1,\r\n                color: percent < ticks[1] ? color[0] : percent < ticks[2] ? color[1] : color[2]\r\n              }\r\n            }\r\n          },\r\n          content: {\r\n            offsetY: 36,\r\n            style: {\r\n              fontSize: '24px',\r\n              color: '#4B535E'\r\n            },\r\n            formatter: () => '系统表现'\r\n          }\r\n        }\r\n      })\r\n\r\n      gauge.render()\r\n      let data = 0.7\r\n      const interval = setInterval(() => {\r\n        if (data >= 1.5) {\r\n          clearInterval(interval)\r\n        }\r\n        data += 0.005\r\n        gauge.changeData(data > 1 ? data - 1 : data)\r\n      }, 100)\r\n    },\r\n    containerGet() {\r\n      const gauge = new Gauge('containerGet', {\r\n        percent: 0.75,\r\n        type: 'meter',\r\n        innerRadius: 0.75,\r\n        range: {\r\n          ticks: [0, 1 / 3, 2 / 3, 1],\r\n          color: ['#F4664A', '#FAAD14', '#30BF78']\r\n        },\r\n        indicator: {\r\n          pointer: {\r\n            style: {\r\n              stroke: '#D0D0D0'\r\n            }\r\n          },\r\n          pin: {\r\n            style: {\r\n              stroke: '#D0D0D0'\r\n            }\r\n          }\r\n        },\r\n        statistic: {\r\n          content: {\r\n            style: {\r\n              fontSize: '36px',\r\n              lineHeight: '36px'\r\n            }\r\n          }\r\n        }\r\n      })\r\n\r\n      gauge.render()\r\n    },\r\n    containerTexture() {\r\n      const ticks = [0, 1 / 3, 2 / 3, 1]\r\n      const color = ['#F4664A', '#FAAD14', '#30BF78']\r\n      const gauge = new Gauge('containerTexture', {\r\n        percent: 0,\r\n        innerRadius: 0.75,\r\n        type: 'meter',\r\n        // 自定义 meter 总步数 以及 step 占比\r\n        meter: {\r\n          steps: 50,\r\n          stepRatio: 0.6\r\n        },\r\n        range: {\r\n          ticks: [0, 1],\r\n          color: ['l(0) 0:#F4664A 0.5:#FAAD14 1:#30BF78']\r\n        },\r\n        indicator: {\r\n          pointer: {\r\n            style: {\r\n              stroke: '#D0D0D0'\r\n            }\r\n          },\r\n          pin: {\r\n            style: {\r\n              stroke: '#D0D0D0'\r\n            }\r\n          }\r\n        },\r\n        statistic: {\r\n          title: {\r\n            formatter: ({ percent }) => {\r\n              if (percent < ticks[1]) {\r\n                return '差'\r\n              }\r\n              if (percent < ticks[2]) {\r\n                return '中'\r\n              }\r\n              return '优'\r\n            },\r\n            style: ({ percent }) => {\r\n              return {\r\n                fontSize: '36px',\r\n                lineHeight: 1,\r\n                color: percent < ticks[1] ? color[0] : percent < ticks[2] ? color[1] : color[2]\r\n              }\r\n            }\r\n          },\r\n          content: {\r\n            offsetY: 36,\r\n            style: {\r\n              fontSize: '24px',\r\n              color: '#4B535E'\r\n            },\r\n            formatter: () => '系统表现'\r\n          }\r\n        }\r\n      })\r\n\r\n      gauge.render()\r\n      let data = 0.7\r\n      const interval = setInterval(() => {\r\n        if (data >= 1.5) {\r\n          clearInterval(interval)\r\n        }\r\n        data += 0.005\r\n        gauge.changeData(data > 1 ? data - 1 : data)\r\n      }, 100)\r\n    }\r\n  },\r\n  created() {\r\n    // var wrapperElement = '<div style=\"position:relative;\"></div>'\r\n    // console.log(document.getElementById('container'))\r\n    // document.getElementById('container').appendChild(wrapperElement)\r\n    // setTimeout(() => {\r\n    // }, 2000)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.demo {\r\n  display: flex;\r\n  flex-flow: wrap;\r\n\r\n  .box {\r\n    box-shadow: 0px 2px 25px 0px rgba(133, 153, 181, 0.2);\r\n    border-radius: 10px;\r\n    display: inline-block;\r\n    padding: 0 20px 20px;\r\n    margin: 20px;\r\n\r\n    h3 {\r\n      line-height: 50px;\r\n      height: 50px;\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  #container {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n\r\n  #containerGs {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n\r\n  #containerGz {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n\r\n  #containerpt {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n\r\n  #containerGet {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n\r\n  #containerTexture {\r\n    display: block;\r\n    width: 500px;\r\n    height: 300px;\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/dashboard/index.vue"],"mappings":"AAkCA","sourceRoot":""}